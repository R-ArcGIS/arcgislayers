[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright [yyyy] [name of copyright owner]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"/articles/Authorization.html","id":"code-based-authorization","dir":"Articles","previous_headings":"","what":"Code based authorization","title":"Authorization","text":"use code based authorization use auth_code() function. requires client ID. client ID public identifier application authenticate . method authorization provides refresh token.","code":""},{"path":"/articles/Authorization.html","id":"getting-the-client-id","dir":"Articles","previous_headings":"Code based authorization","what":"Getting the Client ID","title":"Authorization","text":"client ID likely provided admin AGOL organization ArcGIS Enterprise. case don’t one can likely create one. create client application log portal create new item. Create new Developer credentials  Ensure redirect URL urn:ietf:wg:oauth:2.0:oob keep default selections. Press next fill additional fields.  redirected content page. see credentials application. share . default environment variables used auth_code(). edit environment variables newly created credentials use usethis::edit_r_environ() open .Renviron file . User level environment variables used default. want use project level .Renviron file use usethis::edit_r_environ(\"project\"). Add following lines .Renviron file. ARCGIS_SECRET environment variable used auth_client() necessary auth_code().","code":"ARCGIS_CLIENT=your-client-id ARCGIS_SECRET=your-super-secret-key"},{"path":"/articles/Authorization.html","id":"authorizing","dir":"Articles","previous_headings":"Code based authorization","what":"Authorizing","title":"Authorization","text":"First, load library. Next run auth_code() open tab browser. authorizing somewhere AGOL, set host argument—e.g. auth_code(host = \"https://portal.-company.com\") prompted sign portal.  ’ve signed , copy code appears, return R. Enter code console without modifications press enter.  authorization completed.","code":"library(arcgis) token <- auth_code() token #> <httr2_token> #> token_type: bearer #> access_token: <REDACTED> #> expires_at: 2023-03-03 13:21:40 #> refresh_token: <REDACTED> #> username: your-user #> ssl: TRUE #> refresh_token_expires_in: 1209599"},{"path":"/articles/Authorization.html","id":"refreshing-tokens","dir":"Articles","previous_headings":"Code based authorization","what":"Refreshing tokens","title":"Authorization","text":"auth_code() tokens can refreshed. tokens come refresh token can exchanged new token. can done refresh_token(). requires original token, client ID, hostname (https://arcgis.com default). Additionally function validate_or_refresh_token() provided. can useful long running job may exceed token’s validity. token expired, refreshed. expired, expire within refresh_threshold, returned.","code":"refresh_token(token) #> <httr2_token> #> token_type: bearer #> access_token: <REDACTED> #> expires_at: 2023-03-03 15:52:13 #> username: user-name #> ssl: TRUE #> refresh_token: <REDACTED>"},{"path":"/articles/Authorization.html","id":"client-authorization","dir":"Articles","previous_headings":"","what":"Client authorization","title":"Authorization","text":"non-interactive workflows client OAuth2 flow appropriate. approach require copy paste code browser R session. method generate refresh token, though. Use auth_client() perform client based authorization. auth_client() secret argument , default, uses environment variable ARCGIS_SECRET set .Renviron file . Running","code":"auth_client() #> <httr2_token> #> token_type: bearer #> access_token: <REDACTED> #> expires_at: 2023-03-03 17:12:48"},{"path":"/articles/Authorization.html","id":"legacy-password-authorization","dir":"Articles","previous_headings":"","what":"Legacy Password authorization","title":"Authorization","text":"find legacy system requires username password authorization, can accomplish auth_password(). method authorization recommended, still possible. auth_user() arguments username password , default, use .Renviron environment variables ARCGIS_USER ARCGIS_PASSWORD. strongly recommended use environment variables never store credentials plain text scripts.","code":"auth_user() #> <httr2_token> #> token_type: bearer #> access_token: <REDACTED> #> expires_at: 2023-03-03 15:18:21"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Josiah Parry. Author, maintainer. Eli Pousson. Contributor.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Parry J (2023). arcgislayers: R Interface ArcGIS REST Services. R package version 0.1.0.","code":"@Manual{,   title = {arcgislayers: An R Interface for ArcGIS REST Services},   author = {Josiah Parry},   year = {2023},   note = {R package version 0.1.0}, }"},{"path":"/index.html","id":"arcgislayers","dir":"","previous_headings":"","what":"An R Interface for ArcGIS REST Services","title":"An R Interface for ArcGIS REST Services","text":"goal {arcgislayers} provide R interface ArcGIS REST API","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"An R Interface for ArcGIS REST Services","text":"can install development version arcgis like :","code":"pak::pkg_install(\"R-ArcGIS/arcgislayers\", dependencies = TRUE)"},{"path":"/index.html","id":"basic-usage","dir":"","previous_headings":"","what":"Basic usage","title":"An R Interface for ArcGIS REST Services","text":"arc_open() takes URL create reference remote resource. function can return four classes (corresponding different ArcGIS service types): FeatureLayer Table FeatureServer ImageServer example, can create FeatureLayer object based Feature Server URL: can query feature layer object return sf object using arc_select(). arguments provided arc_select() entire feature layer returned memory sf object. can also use fields argument subset columns argument subset rows. example, using character vector column names fields simple SQL clause can select counties population greater 1,000,000: list_fields() function can helpful check available attributes build query: can also provide bbox, sfc, sfg object filter_geom argument perform spatial filter. sfc object contains one geometry, object combined sf::st_union(). See documentation (?arc_select). SpatRaster object terra package can extracted ImageServer using arc_raster(). arc_raster() requires bbox class object sf package define area extracted. can optionally specify width height resultant image. Use format define type image returned.","code":"library(arcgis) #> Attaching core arcgis packages: #>   - {arcgisutils} v0.1.0 #>   - {arcgislayers} v0.1.0 furl <- \"https://services.arcgis.com/P3ePLMYs2RVChkJx/ArcGIS/rest/services/USA_Counties_Generalized_Boundaries/FeatureServer/0\"  county_fl <- arc_open(furl)  county_fl #> <FeatureLayer <3143 features, 12 fields>> #> Name: USA Counties - Generalized #> Geometry Type: esriGeometryPolygon #> CRS: 4326 #> Capabilities: Query,Extract arc_select(county_fl) #> Simple feature collection with 3142 features and 12 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: -178.2176 ymin: 18.92179 xmax: -66.96927 ymax: 71.40624 #> Geodetic CRS:  WGS 84 #> First 10 features: #>    OBJECTID            NAME STATE_NAME STATE_FIPS  FIPS    SQMI POPULATION #> 1         1  Autauga County    Alabama         01 01001  604.37      58805 #> 2         2  Baldwin County    Alabama         01 01003 1633.14     231767 #> 3         3  Barbour County    Alabama         01 01005  904.52      25223 #> 4         4     Bibb County    Alabama         01 01007  626.17      22293 #> 5         5   Blount County    Alabama         01 01009  650.63      59134 #> 6         6  Bullock County    Alabama         01 01011  625.14      10357 #> 7         7   Butler County    Alabama         01 01013  777.88      19051 #> 8         8  Calhoun County    Alabama         01 01015  612.27     116441 #> 9         9 Chambers County    Alabama         01 01017  603.11      34772 #> 10       10 Cherokee County    Alabama         01 01019  599.98      24971 #>    POP_SQMI STATE_ABBR COUNTY_FIPS Shape__Area Shape__Length #> 1      97.3         AL         001   0.1489034      1.884137 #> 2     141.9         AL         003   0.4044891      3.678276 #> 3      27.9         AL         005   0.2224307      2.218514 #> 4      35.6         AL         007   0.1577359      1.852453 #> 5      90.9         AL         009   0.1675296      2.067456 #> 6      16.6         AL         011   0.1557273      2.006250 #> 7      24.5         AL         013   0.1927305      1.769462 #> 8     190.2         AL         015   0.1523369      2.149825 #> 9      57.7         AL         017   0.1531136      1.637226 #> 10     41.6         AL         019   0.1527217      1.794142 #>                          geometry #> 1  MULTIPOLYGON (((-86.82067 3... #> 2  MULTIPOLYGON (((-87.97309 3... #> 3  MULTIPOLYGON (((-85.74337 3... #> 4  MULTIPOLYGON (((-87.41986 3... #> 5  MULTIPOLYGON (((-86.96799 3... #> 6  MULTIPOLYGON (((-85.4114 32... #> 7  MULTIPOLYGON (((-86.44912 3... #> 8  MULTIPOLYGON (((-85.79353 3... #> 9  MULTIPOLYGON (((-85.58963 3... #> 10 MULTIPOLYGON (((-85.41657 3... arc_select(   county_fl,    fields = c(\"state_abbr\", \"population\"),    where = \"population > 1000000\" ) #> Simple feature collection with 49 features and 2 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: -158.2674 ymin: 21.24986 xmax: -71.02671 ymax: 47.77552 #> Geodetic CRS:  WGS 84 #> First 10 features: #>    STATE_ABBR POPULATION                       geometry #> 1          AZ    4420568 MULTIPOLYGON (((-111.0425 3... #> 2          AZ    1043433 MULTIPOLYGON (((-110.4522 3... #> 3          CA    1682353 MULTIPOLYGON (((-121.4721 3... #> 4          CA    1165927 MULTIPOLYGON (((-122.3076 3... #> 5          CA    1008654 MULTIPOLYGON (((-120.6636 3... #> 6          CA   10014009 MULTIPOLYGON (((-118.1067 3... #> 7          CA    3186989 MULTIPOLYGON (((-117.509 33... #> 8          CA    2418185 MULTIPOLYGON (((-116.0824 3... #> 9          CA    1585055 MULTIPOLYGON (((-121.6652 3... #> 10         CA    2181654 MULTIPOLYGON (((-117.7832 3... list_fields(county_fl) #>             name                 type                  alias       sqlType #> 1       OBJECTID     esriFieldTypeOID               OBJECTID  sqlTypeOther #> 2           NAME  esriFieldTypeString                   Name  sqlTypeOther #> 3     STATE_NAME  esriFieldTypeString             State Name  sqlTypeOther #> 4     STATE_FIPS  esriFieldTypeString             State FIPS  sqlTypeOther #> 5           FIPS  esriFieldTypeString                   FIPS  sqlTypeOther #> 6           SQMI  esriFieldTypeDouble   Area in square miles  sqlTypeOther #> 7     POPULATION esriFieldTypeInteger  2020 Total Population  sqlTypeOther #> 8       POP_SQMI  esriFieldTypeDouble People per square mile  sqlTypeOther #> 9     STATE_ABBR  esriFieldTypeString     State Abbreviation  sqlTypeOther #> 10   COUNTY_FIPS  esriFieldTypeString            County FIPS  sqlTypeOther #> 11   Shape__Area  esriFieldTypeDouble            Shape__Area sqlTypeDouble #> 12 Shape__Length  esriFieldTypeDouble          Shape__Length sqlTypeDouble #>    nullable editable domain defaultValue length #> 1     FALSE    FALSE     NA           NA     NA #> 2      TRUE     TRUE     NA           NA     50 #> 3      TRUE     TRUE     NA           NA     20 #> 4      TRUE     TRUE     NA           NA      2 #> 5      TRUE     TRUE     NA           NA      5 #> 6      TRUE     TRUE     NA           NA     NA #> 7      TRUE     TRUE     NA           NA     NA #> 8      TRUE     TRUE     NA           NA     NA #> 9      TRUE     TRUE     NA           NA      2 #> 10     TRUE     TRUE     NA           NA      3 #> 11     TRUE    FALSE     NA           NA     NA #> 12     TRUE    FALSE     NA           NA     NA #>                                                                                                                                                                                                                 description #> 1                                                                                                                                                                                                                      <NA> #> 2                                                                                                                                                        {\"value\":\"The name of the county.\",\"fieldValueType\":\"nameOrTitle\"} #> 3                                                                                                                         {\"value\":\"The name for the state in which the county is located.\",\"fieldValueType\":\"nameOrTitle\"} #> 4                                                                                                 {\"value\":\"The code (two-digit number) for the state in which the county is located.\",\"fieldValueType\":\"uniqueIdentifier\"} #> 5  {\"value\":\"The combined state and county codes. County codes begin with 001 for each state; use the combined code (five-digit number) to uniquely identify a county in the country.\",\"fieldValueType\":\"uniqueIdentifier\"} #> 6                                                                             {\"value\":\"The area of the county in square miles using the North America Albers Equal Area Conic projection.\",\"fieldValueType\":\"measurement\"} #> 7                                                                                                                                           {\"value\":\"The 2020 population of the county.\",\"fieldValueType\":\"countOrAmount\"} #> 8                                                                                                                             {\"value\":\"The 2020 population of the county per square mile.\",\"fieldValueType\":\"measurement\"} #> 9                                                                                                 {\"value\":\"The two-letter abbreviation for the state in which the county is located.\",\"fieldValueType\":\"uniqueIdentifier\"} #> 10                                                                                                                            {\"value\":\"The code (three-digit number) for the county.\",\"fieldValueType\":\"uniqueIdentifier\"} #> 11                                                                                                                                                                                                                     <NA> #> 12                                                                                                                                                                                                                     <NA> nc <- sf::st_read(system.file(\"shape/nc.shp\", package=\"sf\")) #> Reading layer `nc' from data source  #>   `/Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/library/sf/shape/nc.shp'  #>   using driver `ESRI Shapefile' #> Simple feature collection with 100 features and 14 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: -84.32385 ymin: 33.88199 xmax: -75.45698 ymax: 36.58965 #> Geodetic CRS:  NAD27  arc_select(   county_fl,   filter_geom = sf::st_bbox(nc[1,]) ) #> Simple feature collection with 6 features and 12 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: -82.0477 ymin: 35.98946 xmax: -80.83795 ymax: 36.80746 #> Geodetic CRS:  WGS 84 #>   OBJECTID             NAME     STATE_NAME STATE_FIPS  FIPS   SQMI POPULATION #> 1     1890 Alleghany County North Carolina         37 37005 236.26      10888 #> 2     1892      Ashe County North Carolina         37 37009 429.38      26577 #> 3     1982   Watauga County North Carolina         37 37189 313.32      54086 #> 4     1984    Wilkes County North Carolina         37 37193 756.33      65969 #> 5     2471   Johnson County      Tennessee         47 47091 302.69      17948 #> 6     2855   Grayson County       Virginia         51 51077 445.57      15333 #>   POP_SQMI STATE_ABBR COUNTY_FIPS Shape__Area Shape__Length #> 1     46.1         NC         005  0.06140165      1.231232 #> 2     61.9         NC         009  0.11428581      1.442112 #> 3    172.6         NC         189  0.08142272      1.287674 #> 4     87.2         NC         193  0.19911944      1.984232 #> 5     59.3         TN         091  0.07960385      1.290607 #> 6     34.4         VA         077  0.11578917      1.945424 #>                         geometry #> 1 MULTIPOLYGON (((-81.2397 36... #> 2 MULTIPOLYGON (((-81.47258 3... #> 3 MULTIPOLYGON (((-81.80605 3... #> 4 MULTIPOLYGON (((-81.02037 3... #> 5 MULTIPOLYGON (((-81.74091 3... #> 6 MULTIPOLYGON (((-81.34512 3... img_url <- \"https://landsat2.arcgis.com/arcgis/rest/services/Landsat/MS/ImageServer\"  landsat <- arc_open(img_url)  res <- arc_raster(   landsat,    xmin = -71, ymin = 43,    xmax = -67, ymax = 47.5,    bbox_crs = 4326,    width = 500, height = 500 )  terra::plotRGB(res, 4, 3, 2, scale = max(landsat[[\"maxValues\"]]))"},{"path":"/index.html","id":"authorization","dir":"","previous_headings":"","what":"Authorization","title":"An R Interface for ArcGIS REST Services","text":"See authorization article.","code":""},{"path":"/pull_request_template.html","id":"checklist","dir":"","previous_headings":"","what":"Checklist","title":"NA","text":"update NEWS.md documentation updated devtools::document() devtools::check() passes locally","code":""},{"path":"/pull_request_template.html","id":"changes","dir":"","previous_headings":"","what":"Changes","title":"NA","text":"Describe changes repository. added removed? design choices made reviewed? Issues closes Please link issues closed PR","code":""},{"path":"/pull_request_template.html","id":"follow-up-tasks","dir":"","previous_headings":"","what":"Follow up tasks","title":"NA","text":"follow tasks addressed PR merged?","code":""},{"path":"/reference/add_offset.html","id":null,"dir":"Reference","previous_headings":"","what":"Add an offset to a query parameters — add_offset","title":"Add an offset to a query parameters — add_offset","text":"add_offset() takes list query parameters creates query request. Importantly, creates paginated results needed Feature Layers 2000 observations.","code":""},{"path":"/reference/add_offset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add an offset to a query parameters — add_offset","text":"","code":"add_offset(offset, request, params)"},{"path":"/reference/arc_open.html","id":null,"dir":"Reference","previous_headings":"","what":"Open connection to remote resource — arc_open","title":"Open connection to remote resource — arc_open","text":"Provided URL, create object referencing remote resource. resultant object acts reference remote data source.","code":""},{"path":"/reference/arc_open.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open connection to remote resource — arc_open","text":"","code":"arc_open(url, token = Sys.getenv(\"ARCGIS_TOKEN\"))"},{"path":"/reference/arc_open.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open connection to remote resource — arc_open","text":"url url remote resource. Must length one. token authorization token. default checks environment variable ARCGIS_TOKEN. Set token using arcgisutils::set_auth_token().","code":""},{"path":"/reference/arc_open.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Open connection to remote resource — arc_open","text":"Depending provided URL returns FeatureLayer, Table, FeatureServer, ImageServer.","code":""},{"path":"/reference/arc_open.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Open connection to remote resource — arc_open","text":"extract data remote resource utilize arc_select() objects class FeatureLayer Table. ImageServers, utilize arc_raster().","code":""},{"path":[]},{"path":"/reference/arc_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Imagery — arc_raster","title":"Retrieve Imagery — arc_raster","text":"Given ImageServer export image SpatRaster terra package. See terra::rast.","code":""},{"path":"/reference/arc_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Imagery — arc_raster","text":"","code":"arc_raster(   x,   xmin,   xmax,   ymin,   ymax,   bbox_crs = NULL,   crs = sf::st_crs(x),   width = NULL,   height = NULL,   format = \"tiff\",   token = Sys.getenv(\"ARCGIS_TOKEN\") )"},{"path":"/reference/arc_raster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Imagery — arc_raster","text":"x ImageServer created image_server(). xmin minimum bounding longitude value. xmax maximum bounding longitude value. ymin minimum bounding latitude value. ymax maximum bounding latitude value. bbox_crs CRS values passed xmin, xmax, ymin, ymax. specified, uses CRS x. crs CRS resultant raster image provided bounding box defined xmin, xmax, ymin, ymax (passed outSR query parameter). width default NULL. exceed x[[\"maxImageWidth\"]]. height default NULL. exceed x[[\"maxImageHeight\"]]. format default \"tiff\". Must one \"jpgpng\", \"png\", \"png8\", \"png24\", \"jpg\", \"bmp\", \"gif\", \"tiff\", \"png32\", \"bip\", \"bsq\", \"lerc\". token authorization token fetched environment variable ARCGIS_TOKEN","code":""},{"path":"/reference/arc_raster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Imagery — arc_raster","text":"object class SpatRaster.","code":""},{"path":[]},{"path":"/reference/arc_raster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Imagery — arc_raster","text":"","code":"if (interactive()) { img_url <- \"https://landsat2.arcgis.com/arcgis/rest/services/Landsat/MS/ImageServer\"  landsat <- arc_open(img_url)  arc_raster(   landsat,   xmin = -71,   ymin = 43,   xmax = -67,   ymax = 47.5,   bbox_crs = 4326,   width = 100,   height = 100 ) }"},{"path":"/reference/arc_select.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve a feature layer as simple features or a non-spatial data frame — arc_select","title":"Retrieve a feature layer as simple features or a non-spatial data frame — arc_select","text":"arc_select() takes FeatureLayer Table object returns data layer sf object tibble respectively.","code":""},{"path":"/reference/arc_select.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve a feature layer as simple features or a non-spatial data frame — arc_select","text":"","code":"arc_select(   x,   fields = NULL,   where = NULL,   crs = sf::st_crs(x),   geometry = TRUE,   filter_geom = NULL,   predicate = \"intersects\",   n_max = Inf,   token = Sys.getenv(\"ARCGIS_TOKEN\"),   ... )"},{"path":"/reference/arc_select.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve a feature layer as simple features or a non-spatial data frame — arc_select","text":"x FeatureLayer Table class object created arc_open(). fields character vector field names wish returned. default fields returned. simple SQL statement indicating features selected. crs spatial reference returned. CRS different CRS input FeatureLayer, transformation occur server-side. Ignored x Table. geometry default TRUE. geometries returned. Ignored Table objects. filter_geom object class bbox, sfc sfg used filter query results based predicate function. predicate Spatial predicate use filter_geom. Default \"intersects\". Possible options \"intersects\", \"contains\", \"crosses\",  \"overlaps\",  \"touches\", \"within\". n_max maximum number features return. default returns every feature available. Unused moment. token authorization token. default checks environment variable ARCGIS_TOKEN. Set token using arcgisutils::set_auth_token(). ... additional query parameters passed API.","code":""},{"path":"/reference/arc_select.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve a feature layer as simple features or a non-spatial data frame — arc_select","text":"See reference documentation possible arguments.","code":""},{"path":"/reference/arcgislayers-package.html","id":null,"dir":"Reference","previous_headings":"","what":"arcgislayers: An R Interface for ArcGIS REST Services — arcgislayers-package","title":"arcgislayers: An R Interface for ArcGIS REST Services — arcgislayers-package","text":"R package interface Esri's ArcGIS REST Services.","code":""},{"path":"/reference/arcgislayers-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"arcgislayers: An R Interface for ArcGIS REST Services — arcgislayers-package","text":"Maintainer: Josiah Parry josiah.parry@gmail.com (ORCID) contributors: Eli Pousson eli.pousson@gmail.com (ORCID) [contributor]","code":""},{"path":"/reference/check_inherits_any.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if an object inherits from a set of classes — check_inherits_any","title":"Check if an object inherits from a set of classes — check_inherits_any","text":"check_inherits_any() wraps rlang::inherits_any() error object inherit set classes.","code":""},{"path":"/reference/check_inherits_any.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if an object inherits from a set of classes — check_inherits_any","text":"","code":"check_inherits_any(   x,   class,   arg = rlang::caller_arg(x),   call = rlang::caller_env() )"},{"path":"/reference/check_inherits_any.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if an object inherits from a set of classes — check_inherits_any","text":"x Vector collapsed cli. class character vector classes. arg argument name string. argument mentioned error messages input origin problem. call execution environment currently running function, e.g. caller_env(). function mentioned error messages source error. See call argument abort() information.","code":""},{"path":"/reference/check_null_or_scalar.html","id":null,"dir":"Reference","previous_headings":"","what":"Useful for when an argument must either be NULL or a scalar\nvalue. This is most useful when ensuring that values passed\nto httr2::req_body_multiform() are scalars. Multiple length\nvalues are not permitted. — check_null_or_scalar","title":"Useful for when an argument must either be NULL or a scalar\nvalue. This is most useful when ensuring that values passed\nto httr2::req_body_multiform() are scalars. Multiple length\nvalues are not permitted. — check_null_or_scalar","text":"Useful argument must either NULL scalar value. useful ensuring values passed httr2::req_body_multiform() scalars. Multiple length values permitted.","code":""},{"path":"/reference/check_null_or_scalar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Useful for when an argument must either be NULL or a scalar\nvalue. This is most useful when ensuring that values passed\nto httr2::req_body_multiform() are scalars. Multiple length\nvalues are not permitted. — check_null_or_scalar","text":"","code":"check_null_or_scalar(   x,   arg = rlang::caller_arg(x),   error_call = rlang::caller_env() )"},{"path":"/reference/chunk_indices.html","id":null,"dir":"Reference","previous_headings":"","what":"Get chunk indices — chunk_indices","title":"Get chunk indices — chunk_indices","text":"given number items chunk size, determine start end positions chunk.","code":""},{"path":"/reference/chunk_indices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get chunk indices — chunk_indices","text":"","code":"chunk_indices(n, m)"},{"path":"/reference/chunk_indices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get chunk indices — chunk_indices","text":"n number rows m chunk size","code":""},{"path":"/reference/collect_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Query a FeatureLayer or Table object — collect_layer","title":"Query a FeatureLayer or Table object — collect_layer","text":"collect_layer() \"workhorse\" function actually executes queries FeatureLayer Table objects.","code":""},{"path":"/reference/collect_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query a FeatureLayer or Table object — collect_layer","text":"","code":"collect_layer(   x,   n_max = Inf,   token = Sys.getenv(\"ARCGIS_TOKEN\"),   ...,   error_call = rlang::caller_env() )"},{"path":"/reference/create_feature_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a FeatureServer — create_feature_server","title":"Create a FeatureServer — create_feature_server","text":"Create FeatureServer","code":""},{"path":"/reference/create_feature_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a FeatureServer — create_feature_server","text":"","code":"create_feature_server(   service_name,   user = Sys.getenv(\"ARCGIS_USER\"),   description = \"\",   crs = 3857,   capabilities = c(\"create\", \"delete\", \"query\", \"update\", \"editing\"),   query_formats = c(\"json\", \"geojson\"),   initial_extent = list(xmin = NULL, xmax = NULL, ymin = NULL, ymax = NULL),   max_record_count = 1000L,   allow_updates = TRUE,   copyright = \"\",   has_static_data = FALSE,   xss_prevention = xss_defaults(),   host = arc_host(),   token = Sys.getenv(\"ARCGIS_TOKEN\") )  xss_defaults()"},{"path":"/reference/create_feature_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a FeatureServer — create_feature_server","text":"service_name Feature Service name. user default Sys.getenv(\"ARCGIS_USER\"). account's username. description default blank. description feature server. crs default 3857. coordinate reference system set feature server. Must compatible sf::st_crs(). capabilities default full capabilities. Character vector capabilities. query_formats default json geojson. May restricted site-wide settings. initial_extent optional. named list element xmin, xmax, ymin, ymax. Values must CRS crs. max_record_count default 1000. maximum number records can retrieved layer one request. allow_updates default TRUE. Determine geometries can updated. copyright default blank. Copyright notice provide Feature Server has_static_data default FALSE. Indicates data changing. xss_prevention cross-site-scripting prevention enabled default. See details . host default \"https://www.arcgis.com\" token object class httr2_token generated auth_code() auth_client().","code":""},{"path":"/reference/create_feature_server.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a FeatureServer — create_feature_server","text":"FeatureServer cerated successfully, FeatureServer object returned based newly created feature server's url.","code":""},{"path":[]},{"path":"/reference/dplyr.html","id":null,"dir":"Reference","previous_headings":"","what":"dplyr methods — select.FeatureLayer","title":"dplyr methods — select.FeatureLayer","text":"dplyr methods","code":""},{"path":"/reference/dplyr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dplyr methods — select.FeatureLayer","text":"","code":"select.FeatureLayer(x, ...)  select.Table(x, ...)  filter.FeatureLayer(x, ...)  filter.Table(x, ...)  collect.FeatureLayer(   x,   n_max = Inf,   token = Sys.getenv(\"ARCGIS_TOKEN\"),   ...,   error_call = rlang::caller_env() )  collect.Table(   x,   n_max = Inf,   token = Sys.getenv(\"ARCGIS_TOKEN\"),   ...,   error_call = rlang::caller_env() )"},{"path":"/reference/dplyr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"dplyr methods — select.FeatureLayer","text":"Feature Layer method collect() overwrite returnGeometry parameter set update_params(). Use geometry argument collect() set parameter.","code":""},{"path":"/reference/get_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract a layer from a Feature or Map Server — get_layer","title":"Extract a layer from a Feature or Map Server — get_layer","text":"helpers provide easy access layers contained FeatureServer MapServer.","code":""},{"path":"/reference/get_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract a layer from a Feature or Map Server — get_layer","text":"","code":"get_layer(x, id = NULL, name = NULL, token = Sys.getenv(\"ARCGIS_TOKEN\"))  get_all_layers(x, token = Sys.getenv(\"ARCGIS_TOKEN\"))  get_layers(x, id = NULL, name = NULL, token = Sys.getenv(\"ARCGIS_TOKEN\"))"},{"path":"/reference/get_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract a layer from a Feature or Map Server — get_layer","text":"x object class FeatureServer MapServer id default NULL. numeric vector unique ID layer want retrieve. scalar get_layer(). name default NULL. name associated layer want retrieve. name mutually exclusive id. scalar get_layer(). token authorization token. default checks environment variable ARCGIS_TOKEN. Set token using arcgisutils::set_auth_token().","code":""},{"path":"/reference/get_layer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract a layer from a Feature or Map Server — get_layer","text":"get_layer() returns single FeatureLayer Table based ID get_layers() returns list items specified id name argument get_all_layers() returns named list element layers tables. list containing FeatureLayer Tables respectively.","code":""},{"path":"/reference/get_layer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract a layer from a Feature or Map Server — get_layer","text":"id name arguments must match field values respective names seen output list_items()","code":""},{"path":"/reference/modify.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Features to Feature Layer — add_features","title":"Add Features to Feature Layer — add_features","text":"Delete features feature layer based object ID, clause, spatial filter.","code":""},{"path":"/reference/modify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Features to Feature Layer — add_features","text":"","code":"add_features(   x,   .data,   chunk_size = 2000,   match_on = c(\"name\", \"alias\"),   rollback_on_failure = TRUE,   token = Sys.getenv(\"ARCGIS_TOKEN\") )  update_features(   x,   .data,   match_on = c(\"name\", \"alias\"),   token = Sys.getenv(\"ARCGIS_TOKEN\"),   rollback_on_failure = TRUE,   ... )  delete_features(   x,   object_ids = NULL,   where = NULL,   filter_geom = NULL,   predicate = \"intersects\",   rollback_on_failure = TRUE,   token = Sys.getenv(\"ARCGIS_TOKEN\"),   ... )"},{"path":"/reference/modify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Features to Feature Layer — add_features","text":"x object class FeatureLayer .data object class sf data.frame chunk_size maximum number features add time match_on whether match alias field name. Default, alias. See Details . rollback_on_failure default TRUE. Specifies whether edits applied submitted edits succeed. token authorization token. default, token set environment variable ARCGIS_TOKEN. Use set_auth_token() set ARCGIS_TOKEN. ... additional query parameters passed API. object_ids numeric vector object IDs deleted. simple SQL statement indicating features deleted. statement evaluates TRUE, values deleted. filter_geom object class bbox, sfc sfg used filter query results based predicate function. predicate Spatial predicate use filter_geom. Default \"intersects\". Possible options \"intersects\", \"contains\", \"crosses\",  \"overlaps\",  \"touches\", \"within\".","code":""},{"path":"/reference/modify.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add Features to Feature Layer — add_features","text":"Regarding match_on argument:publishing object ArcGIS Portal R, object's names provided alias. object's names subject change according standards ArcGIS REST API. example. \"Sepal.Length\" changed \"Sepal_Width\" name field alias remains \"Sepal.Length\". reason, match alias name default. Change argument match based field name.","code":""},{"path":"/reference/obj_check_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if an object is a FeatureLayer or Table object — obj_check_layer","title":"Check if an object is a FeatureLayer or Table object — obj_check_layer","text":"obj_check_layer() errors object inherit either FeatureLayer Table class.","code":""},{"path":"/reference/obj_check_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if an object is a FeatureLayer or Table object — obj_check_layer","text":"","code":"obj_check_layer(x, arg = rlang::caller_arg(x), call = rlang::caller_env())"},{"path":"/reference/obj_check_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if an object is a FeatureLayer or Table object — obj_check_layer","text":"x FeatureLayer Table class object created arc_open(). arg argument name string. argument mentioned error messages input origin problem. call execution environment currently running function, e.g. caller_env(). function mentioned error messages source error. See call argument abort() information.","code":""},{"path":"/reference/prettify_param.html","id":null,"dir":"Reference","previous_headings":"","what":"function to make printing easier — prettify_param","title":"function to make printing easier — prettify_param","text":"function takes parameter name query list trims element fit contents window.","code":""},{"path":"/reference/prettify_param.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"function to make printing easier — prettify_param","text":"","code":"prettify_param(param, query)"},{"path":"/reference/publish.html","id":null,"dir":"Reference","previous_headings":"","what":"Publish Content — add_item","title":"Publish Content — add_item","text":"Publishes sf data.frame object ArcGIS Portal FeatureCollection.","code":""},{"path":"/reference/publish.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Publish Content — add_item","text":"","code":"add_item(   x,   title,   user = Sys.getenv(\"ARCGIS_USER\"),   description = \"\",   tags = character(0),   snippet = \"\",   categories = character(0),   async = FALSE,   type = \"Feature Service\",   host = arc_host(),   token = Sys.getenv(\"ARCGIS_TOKEN\") )  publish_item(   item_id,   user = Sys.getenv(\"ARCGIS_USER\"),   publish_params = .publish_params(),   file_type = \"featureCollection\",   host = arc_host(),   token = Sys.getenv(\"ARCGIS_TOKEN\") )  publish_layer(   x,   title,   ...,   user = Sys.getenv(\"ARCGIS_USER\"),   publish_params = .publish_params(title, target_crs = sf::st_crs(x)),   host = arc_host(),   token = Sys.getenv(\"ARCGIS_TOKEN\") )  .publish_params(   name = NULL,   description = NULL,   copyright = NULL,   target_crs = 3857,   max_record_count = 2000L )"},{"path":"/reference/publish.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Publish Content — add_item","text":"x object class data.frame. can sf object tibble subclass data.frame. title user-friendly string title layer can used table contents. user default environment variable Sys.getenv(\"ARCGIS_USER\"). username publish item . description length 1 character vector containing description item added. Note value larger 64kb. tags character vector tags add item. snippet length 1 character vector 2048 characters. categories character vector categories item. async default FALSE. changed time. type default \"Feature Service\". Must changed time. host default \"https://www.arcgis.com\" token object class httr2_token generated auth_code() auth_client(). item_id ID item published. publish_params list named values publishParameters. Must match values /publish endpoint documentation. file_type default \"featureCollection\". changed. ... arguments passed add_item(). name scalar character name layer. Must unique. copyright optional character scalar containing copyright text add published Feature Service. target_crs CRS Feature Service created. default, EPSG:3857. max_record_count maximum number records can returned created Feature Service.","code":""},{"path":"/reference/publish.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Publish Content — add_item","text":"add_item() takes data.frame like object uploads item portal. publish_item() takes ID item portal publishes feature service. publish_layer() high-level wrapper first adds object item portal subsequently publishes . .publish_params() utility function specify optional publish parameters copyright text, spatial reference published feature collection. Note support feature services meaning tables feature layers can made functions.","code":""},{"path":"/reference/publish.html","id":"publish-parameters","dir":"Reference","previous_headings":"","what":"Publish Parameters","title":"Publish Content — add_item","text":"publishing item portal, number publish parameters can provided. importantly targetSR CRS hosted feature service. default EPSG:3857. publish_layer() use CRS input object, x, default. publishing content two steps add_item() publish_item(), use .publish_params() craft publish parameters. Ensure CRS provided target_crs matches item added add_item().","code":""},{"path":"/reference/publish.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Publish Content — add_item","text":"","code":"if (interactive()) {   nc <- sf::st_read(system.file(\"shape/nc.shp\", package = \"sf\"))   x <- nc[1:5, 13]    tkn <- auth_code()   set_auth_token(tkn)    publish_res <- publish_layer(     x, \"North Carolina SIDS sample\"   ) }"},{"path":"/reference/spatial_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare JSON for use as a spatial filter based on feature geometry or\nbounding box input — prepare_spatial_filter","title":"Prepare JSON for use as a spatial filter based on feature geometry or\nbounding box input — prepare_spatial_filter","text":"prepare_spatial_filter() prepares named list ESRI JSON geometry use spatial filter based sfc, sfg, bbox input object. match_spatial_rel() takes scalar character vector predicate name type ESRI spatial relation.","code":""},{"path":"/reference/spatial_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare JSON for use as a spatial filter based on feature geometry or\nbounding box input — prepare_spatial_filter","text":"","code":"prepare_spatial_filter(   filter_geom,   crs,   predicate,   error_call = rlang::caller_env() )  match_spatial_rel(predicate, error_call = rlang::caller_env())"},{"path":"/reference/spatial_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare JSON for use as a spatial filter based on feature geometry or\nbounding box input — prepare_spatial_filter","text":"filter_geom object class bbox, sfc sfg used filter query results based predicate function. predicate Spatial predicate use filter_geom. Default \"intersects\". Possible options \"intersects\", \"contains\", \"crosses\",  \"overlaps\",  \"touches\", \"within\".","code":""},{"path":"/reference/spatial_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare JSON for use as a spatial filter based on feature geometry or\nbounding box input — prepare_spatial_filter","text":"prepare_spatial_filter() returns named list geometryType, geometry (ESRI JSON), spatial relation predicate. match_spatial_rel() returns one following spatial binary predicates: esriSpatialRelIntersects esriSpatialRelContains esriSpatialRelCrosses esriSpatialRelOverlaps esriSpatialRelTouches esriSpatialRelWithin","code":""},{"path":"/reference/spatial_filter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prepare JSON for use as a spatial filter based on feature geometry or\nbounding box input — prepare_spatial_filter","text":"Using sfc objects filter_geom  sfc object provided transformed layers spatial reference. sfc missing CRS (sfg object) assumed use spatial reference FeatureLayer. sfc object multiple features, features unioned sf::st_union(). sfc object MULTIPOLYGON geometry, features unioned cast POLYGON geometry sf::st_cast(). geometries checked validity conversion.","code":""},{"path":"/reference/truncate_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Truncate a Feature Layer — truncate_layer","title":"Truncate a Feature Layer — truncate_layer","text":"Removes features Feature Layer Table resets object ID counter. Truncating Feature Layer change schema data (add, remove, alter existing database columns, constraints, indexes).","code":""},{"path":"/reference/truncate_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Truncate a Feature Layer — truncate_layer","text":"","code":"truncate_layer(   x,   async = FALSE,   attachment_only = FALSE,   token = Sys.getenv(\"ARCGIS_TOKEN\") )"},{"path":"/reference/truncate_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Truncate a Feature Layer — truncate_layer","text":"x FeatureLayer Table class object created arc_open(). async default FALSE. recommended set TRUE larger datasets. attachment_only default FALSE. Deletes attachments layer. None layer features deleted TRUE. token authorization token. default checks environment variable ARCGIS_TOKEN. Set token using arcgisutils::set_auth_token().","code":""},{"path":"/reference/truncate_layer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Truncate a Feature Layer — truncate_layer","text":"named list name \"success\" value TRUE FALSE","code":""},{"path":"/reference/truncate_layer.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Truncate a Feature Layer — truncate_layer","text":"ArcGIS Developers Rest API Doc","code":""},{"path":"/reference/truncate_layer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Truncate a Feature Layer — truncate_layer","text":"","code":"# \\donttest{ if (interactive()) {    # authorize using code flow   set_auth_token(auth_code())    # create a FeatureLayer object   flayer <- arc_open(\"your-feature-layer-url\")    # truncate it   truncate_layer(flayer) } # }"},{"path":"/reference/update_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify query parameters — update_params","title":"Modify query parameters — update_params","text":"update_params() takes named arguments updates query.","code":""},{"path":"/reference/update_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify query parameters — update_params","text":"","code":"update_params(x, ...)"},{"path":"/reference/update_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify query parameters — update_params","text":"x FeatureLayer Table object ... key value pairs query parameters values.","code":""},{"path":"/reference/update_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Modify query parameters — update_params","text":"object class x","code":""},{"path":"/reference/update_params.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Modify query parameters — update_params","text":"","code":"if (interactive()) {  furl <- \"https://services.arcgis.com/P3ePLMYs2RVChkJx/ArcGIS/rest/services/USA_Major_Cities_/FeatureServer/0\"  flayer <- arc_open(furl)  update_params(flayer, outFields = \"NAME\") }"},{"path":"/reference/utils.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility functions — clear_query","title":"Utility functions — clear_query","text":"Utility functions","code":""},{"path":"/reference/utils.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility functions — clear_query","text":"","code":"clear_query(x)  list_fields(x)  list_items(x)  refresh_layer(x)"},{"path":"/reference/utils.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility functions — clear_query","text":"x FeatureLayer Table class object created arc_open().","code":""},{"path":"/reference/utils.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility functions — clear_query","text":"See Details.","code":""},{"path":"/reference/utils.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Utility functions — clear_query","text":"list_fields() returns data.frame fields FeatureLayer Table list_items() returns data.frame containing layers tables FeatureServer MapServer clear_query() removes saved query FeatureLayer Table object refresh_layer() syncs FeatureLayer Table remote resource picking changes may made upstream. Returns object class x.","code":""},{"path":"/reference/validate_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate query parameters — validate_params","title":"Validate query parameters — validate_params","text":"validate_params() ensures parameters set minimally acceptable values.","code":""},{"path":"/reference/validate_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate query parameters — validate_params","text":"","code":"validate_params(params, token)"},{"path":"/news/index.html","id":"arcgislayers-010-unreleased","dir":"Changelog","previous_headings":"","what":"arcgislayers 0.1.0 (unreleased)","title":"arcgislayers 0.1.0 (unreleased)","text":"Add truncate_layer() support truncate append workflow Add support opening MapServers https://github.com/R-ArcGIS/arcgislayers/pull/83 Print method show something like <FeatureLayer <NA features, 10 fields>> arc_select() now supported ImageServers #78 add_features() now paginated performed parallel. gains argument chunk_size determines maximum number rows added feature service. new utility function list_items() adds cli explicit import (implicitly imported httr2) repository made public add lifecycle badges exported functions https://github.com/R-ArcGIS/arcgislayers/pull/101","code":""}]
