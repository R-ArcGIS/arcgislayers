% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/arc-select.R
\name{arc_select}
\alias{arc_select}
\title{Retrieve a feature layer as simple features or a non-spatial data frame}
\usage{
arc_select(
  x,
  fields = NULL,
  where = NULL,
  crs = sf::st_crs(x),
  filter_geom = NULL,
  predicate = "intersects",
  n_max = Inf,
  token = Sys.getenv("ARCGIS_TOKEN"),
  ...
)
}
\arguments{
\item{x}{A \code{FeatureLayer} or \code{Table} class object created with \code{\link[=arc_open]{arc_open()}}.}

\item{fields}{a character vector of the field names that you wish to be
returned. By default all fields are returned.}

\item{where}{a simple SQL where statement indicating which features should be
selected.}

\item{crs}{the spatial reference to be returned. If the CRS is different than
the the CRS for the input \code{FeatureLayer}, a transformation will occur
server-side. Ignored if x is a \code{Table}.}

\item{filter_geom}{an object of class \code{bbox}, \code{sfc} or \code{sfg} used to filter
query results based on a predicate function.}

\item{predicate}{Spatial predicate to use with \code{filter_geom}. Default
\code{"intersects"}. Possible options are \code{"intersects"}, \code{"contains"},
\code{"crosses"},  \code{"overlaps"},  \code{"touches"}, and \code{"within"}.}

\item{n_max}{the maximum number of features to return. By default returns
every feature available. Unused at the moment.}

\item{...}{additional query parameters passed to the API.}
}
\description{
\code{\link[=arc_select]{arc_select()}} takes a \code{FeatureLayer} or \code{Table} object and returns data from
the layer as an \code{sf} object or \code{tibble} respectively.
}
\details{
See \href{https://developers.arcgis.com/rest/services-reference/enterprise/query-feature-service-layer-.htm#GUID-BC2AD141-3386-49FB-AA09-FF341145F614}{reference documentation} for possible arguments.
}
